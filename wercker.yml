box: tcnksm/gox@0.2.0
build:
  steps:
    - setup-go-workspace

    - wercker/add-ssh-key:
        keyname: REPORTER_KEY

    - script:
        name: fetch github.com/wercker/reporter
        code: git clone git@github.com:wercker/reporter $GOPATH/src/github.com/wercker/reporter

    - termie/glide-build:
        # We do the actual build with gox below
        build: false

    - script:
        name: go vet
        code: go tool vet *.go

    - golint

    - script:
        name: go test
        code: |-
            go test

    - tcnksm/gox:
        ldflags: -X main.GitCommit $WERCKER_GIT_COMMIT -X main.PatchVersion $(( ($(date +%s) - $(date --date=20150101 +%s) )/(60*60*24) )) -X main.Compiled $(date +%s)
        os: "darwin linux"
        arch: "386 amd64"

    - script:
        name: prepare
        code: |-
            echo $WERCKER_GIT_COMMIT > $WERCKER_OUTPUT_DIR/HEAD
            mv $WERCKER_OUTPUT_DIR/pkg $WERCKER_OUTPUT_DIR/latest
            cp -r $WERCKER_OUTPUT_DIR/latest $WERCKER_OUTPUT_DIR/$WERCKER_GIT_COMMIT
            cp -r install_script $WERCKER_OUTPUT_DIR/install_script

deploy:
  steps:
    - s3sync:
        source-dir: "."
        delete-removed: false
        bucket-url: $AWS_BUCKET_URL/$WERCKER_GIT_BRANCH/
        key-id: $AWS_ACCESS_KEY_ID
        key-secret: $AWS_SECRET_ACCESS_KEY

  # This should be auto deployed when a commit is made to "master".
  beta:
    - script:
        name: version
        code: |
            export WERCKER_VERSION=$(./latest/linux_amd64/sentcli --version | awk '{print $3}')
            echo $WERCKER_VERSION
            ./latest/linux_amd64/sentcli version --json > ./latest/version.json

    - script:
        name: rename
        code: |
            find . -type f -name "sentcli" -exec bash -c 'mv "${0}" ${0/%sentcli/wercker}' {} \;

    - script:
        name: gzip files
        code: |
            find . -type f | xargs gzip
            find . -type f -name "*.gz" -exec bash -c 'mv "${0}" ${0/%.gz/}' {} \;

    - s3sync:
        source-dir: "./latest"
        delete-removed: false
        bucket-url: $DOWNLOADS_BUCKET_URL/beta/
        key-id: $AWS_ACCESS_KEY_ID
        key-secret: $AWS_SECRET_ACCESS_KEY
        opts: --acl-public --add-header=Content-Encoding:gzip

    - s3sync:
        source-dir: "./latest"
        delete-removed: false
        bucket-url: $DOWNLOADS_BUCKET_URL/dev/$WERCKER_VERSION/
        key-id: $AWS_ACCESS_KEY_ID
        key-secret: $AWS_SECRET_ACCESS_KEY
        opts: --acl-public --add-header=Content-Encoding:gzip

  # This should be manually deployed when we want to make new version available.
  stable:
    - script:
        name: version
        code: |
            export WERCKER_VERSION=$(./latest/linux_amd64/sentcli --version | awk '{print $3}')
            echo $WERCKER_VERSION
            ./latest/linux_amd64/sentcli version --json > ./latest/version.json

    - script:
        name: rename
        code: |
            find . -type f -name "sentcli" -exec bash -c 'mv "${0}" ${0/%sentcli/wercker}' {} \;

    - s3sync:
        source-dir: "./latest"
        delete-removed: false
        bucket-url: $DOWNLOADS_BUCKET_URL/stable/
        key-id: $AWS_ACCESS_KEY_ID
        key-secret: $AWS_SECRET_ACCESS_KEY

    - s3sync:
        source-dir: "./latest"
        delete-removed: false
        bucket-url: $DOWNLOADS_BUCKET_URL/versions/$WERCKER_VERSION/
        key-id: $AWS_ACCESS_KEY_ID
        key-secret: $AWS_SECRET_ACCESS_KEY

  installsh:
    - script:
        name: ls
        code: ls -la

    - s3sync:
        source-dir: "install_script/"
        bucket-url: $INSTALLSH_BUCKET_URL
        key-id: $AWS_ACCESS_KEY_ID
        key-secret: $AWS_SECRET_ACCESS_KEY
