box: tcnksm/gox:1.4.2
build:
  steps:
    - install-packages:
        packages: openssh-client

    - add-ssh-key:
        keyname: REPORTER_KEY
        host: github.com

    - add-to-known_hosts:
        hostname: github.com
        fingerprint: "16:27:ac:a5:76:28:2d:36:63:1b:56:4d:eb:df:a6:48"

    - setup-go-workspace:
        package-dir: github.com/wercker/sentcli

    - termie/glide-build:
        build: false

    - script:
        name: go vet
        code: |
            go get golang.org/x/tools/cmd/vet
            go vet *.go

    - golint

    - script:
        name: go test
        code: go test

    - script:
        name: clear out the build binaries
        code: |
            rm -rf $GOPATH/pkg

    - script:
        name: gox
        code: |
            gox \
              -ldflags="-X main.GitCommit $WERCKER_GIT_COMMIT -X main.PatchVersion $(( ($(date +%s) - $(date --date=20150101 +%s) )/(60*60*24) )) -X main.Compiled $(date +%s)" \
              -os="linux darwin" \
              -arch="amd64 386" \
              -output "$WERCKER_OUTPUT_DIR/pkg/{{.OS}}_{{.Arch}}/sentcli"

    - script:
        name: prepare
        code: |
            echo $WERCKER_GIT_COMMIT > $WERCKER_OUTPUT_DIR/HEAD
            mv $WERCKER_OUTPUT_DIR/pkg $WERCKER_OUTPUT_DIR/latest
            cp -r $WERCKER_OUTPUT_DIR/latest $WERCKER_OUTPUT_DIR/$WERCKER_GIT_COMMIT
            cp -r install_script $WERCKER_OUTPUT_DIR/install_script

    # - internal/docker-push:
    #     registry: quay.io
    #     repository: quay.io/wercker/goxxxer
    #     username: $DOCKER_USERNAME
    #     password: $DOCKER_PASSWORD
    #     ports: 22/tcp,9000
    #     volumes: /tmp
    #     tag: latest
deploy:
  box: ubuntu:12.04
  steps:
    - s3sync:
        source-dir: "."
        delete-removed: false
        bucket-url: $AWS_BUCKET_URL/$WERCKER_GIT_BRANCH/
        key-id: $AWS_ACCESS_KEY_ID
        key-secret: $AWS_SECRET_ACCESS_KEY

  # This should be auto deployed when a commit is made to "master".
  beta:
    - script:
        name: version
        code: |
            export WERCKER_VERSION=$(./latest/linux_amd64/sentcli --version | awk '{print $3}')
            echo $WERCKER_VERSION
            ./latest/linux_amd64/sentcli version --json > ./latest/version.json

    - script:
        name: rename
        code: |
            find . -type f -name "sentcli" -exec bash -c 'mv "${0}" ${0/%sentcli/wercker}' {} \;

    - s3sync:
        source-dir: "./latest"
        delete-removed: false
        bucket-url: $DOWNLOADS_BUCKET_URL/beta/
        key-id: $AWS_ACCESS_KEY_ID
        key-secret: $AWS_SECRET_ACCESS_KEY

    - s3sync:
        source-dir: "./latest"
        delete-removed: false
        bucket-url: $DOWNLOADS_BUCKET_URL/dev/$WERCKER_VERSION/
        key-id: $AWS_ACCESS_KEY_ID
        key-secret: $AWS_SECRET_ACCESS_KEY

  # This should be manually deployed when we want to make new version available.
  stable:
    - script:
        name: version
        code: |
            export WERCKER_VERSION=$(./latest/linux_amd64/sentcli --version | awk '{print $3}')
            echo $WERCKER_VERSION
            ./latest/linux_amd64/sentcli version --json > ./latest/version.json

    - script:
        name: rename
        code: |
            find . -type f -name "sentcli" -exec bash -c 'mv "${0}" ${0/%sentcli/wercker}' {} \;

    - s3sync:
        source-dir: "./latest"
        delete-removed: false
        bucket-url: $DOWNLOADS_BUCKET_URL/stable/
        key-id: $AWS_ACCESS_KEY_ID
        key-secret: $AWS_SECRET_ACCESS_KEY

    - s3sync:
        source-dir: "./latest"
        delete-removed: false
        bucket-url: $DOWNLOADS_BUCKET_URL/versions/$WERCKER_VERSION/
        key-id: $AWS_ACCESS_KEY_ID
        key-secret: $AWS_SECRET_ACCESS_KEY

  installsh:
    - s3sync:
        source-dir: "install_script/"
        bucket-url: $INSTALLSH_BUCKET_URL
        key-id: $AWS_ACCESS_KEY_ID
        key-secret: $AWS_SECRET_ACCESS_KEY
